version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - identifier: StartupRequest
          length: 111
          payload: AAAAbwADAABjbGllbnRfZW5jb2RpbmcAVVRGOABleHRyYV9mbG9hdF9kaWdpdHMAMgBkYXRlc3R5bGUASVNPLCBNRFkAdXNlcgBsZXR0ZXJwcmVzcwBkYXRhYmFzZQBsZXR0ZXJwcmVzc19kYgAA
          startup_message:
            protocolversion: 196608
            parameters:
                client_encoding: UTF8
                database: letterpress_db
                datestyle: ISO, MDY
                extra_float_digits: "2"
                user: letterpress
          auth_type: 0
    postgresresponses:
        - header: [R]
          identifier: ServerResponse
          length: 111
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          authentication_sasl:
            auth_mechanisms:
                - SCRAM-SHA-256
          msg_type: 82
          auth_type: 10
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [p]
          identifier: ClientRequest
          length: 111
          password_message:
            password: SCRAM-SHA-256
          msg_type: 112
          auth_type: 0
    postgresresponses:
        - header: [R]
          identifier: ServerResponse
          length: 111
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          authentication_sasl_continue: {data: [114, 61, 116, 109, 97, 89, 65, 66, 103, 89, 86, 119, 106, 55, 43, 122, 54, 112, 105, 97, 99, 100, 77, 65, 61, 61, 47, 86, 86, 108, 75, 107, 89, 90, 97, 89, 81, 47, 65, 81, 78, 109, 115, 43, 80, 68, 89, 87, 57, 52, 44, 115, 61, 53, 108, 120, 66, 119, 74, 72, 116, 118, 52, 89, 85, 99, 121, 106, 103, 84, 83, 53, 51, 105, 81, 61, 61, 44, 105, 61, 52, 48, 57, 54]}
          msg_type: 82
          auth_type: 11
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [p]
          identifier: ClientRequest
          length: 111
          msg_type: 112
          auth_type: 0
    postgresresponses:
        - header: [R, R, S, S, S, S, S, S, S, S, S, S, S, S, S, S, K, Z]
          identifier: ServerResponse
          length: 111
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          authentication_sasl_final: {data: [118, 61, 121, 109, 107, 74, 84, 117, 87, 75, 103, 84, 48, 111, 116, 108, 54, 66, 66, 108, 75, 105, 85, 66, 102, 49, 120, 66, 101, 105, 121, 122, 66, 55, 65, 52, 50, 98, 121, 82, 88, 100, 115, 56, 103, 61]}
          backend_key_data:
            process_id: 53
            secret_key: 840904195
          parameter_status:
            - name: in_hot_standby
              value: "off"
            - name: integer_datetimes
              value: "on"
            - name: TimeZone
              value: Etc/UTC
            - name: IntervalStyle
              value: postgres
            - name: is_superuser
              value: "on"
            - name: application_name
              value: ""
            - name: default_transaction_read_only
              value: "off"
            - name: scram_iterations
              value: "4096"
            - name: DateStyle
              value: ISO, MDY
            - name: standard_conforming_strings
              value: "on"
            - name: session_authorization
              value: letterpress
            - name: client_encoding
              value: UTF8
            - name: server_version
              value: 16.0 (Debian 16.0-1.pgdg120+1)
            - name: server_encoding
              value: UTF8
            - name: server_encoding
              value: UTF8
            - name: server_encoding
              value: UTF8
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [Q]
          identifier: ClientRequest
          length: 111
          query:
            string: ;
          msg_type: 81
          auth_type: 0
    postgresresponses:
        - header: [I, Z]
          identifier: ServerResponse
          length: 111
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 111
          describe:
            object_type: 83
            name: ""
          parse:
            - name: ""
              query: INSERT INTO posts(title, body) VALUES ($1, $2) RETURNING id
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, T, Z]
          identifier: ServerResponse
          length: 111
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 1043
                - 25
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [105, 100], table_oid: 24585, table_attribute_number: 1, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 111
          bind:
            - parameters: [[77, 101, 101, 116, 32, 83, 97, 114, 116, 104, 97, 107, 44, 32, 79, 117, 114, 32, 78, 101, 120, 116, 32, 70, 101, 97, 116, 117, 114, 101, 32, 102, 111, 114, 32, 67, 67, 32, 78, 101, 116, 119, 111, 114, 107], [65, 102, 116, 101, 114, 32, 105, 110, 116, 114, 111, 100, 117, 99, 105, 110, 103, 32, 116, 104, 101, 32, 67, 67, 32, 73, 116, 97, 108, 121, 32, 67, 104, 97, 112, 116, 101, 114, 32, 116, 111, 32, 121, 111, 117, 32, 105, 110, 32, 74, 117, 108, 121, 44, 32, 116, 104, 101, 32, 67, 67, 32, 78, 101, 116, 104, 101, 114, 108, 97, 110, 100, 115, 32, 67, 104, 97, 112, 116, 101, 114, 32, 105, 110, 32, 65, 117, 103, 117, 115, 116, 44, 32, 67, 67, 32, 66, 97, 110, 103, 108, 97, 100, 101, 115, 104, 32, 67, 104, 97, 112, 116, 101, 114, 32, 105, 110, 32, 83, 101, 112, 116, 101, 109, 98, 101, 114, 44, 32, 67, 67, 32, 84, 97, 110, 122, 97, 110, 105, 97, 32, 67, 104, 97, 112, 116, 101, 114, 32, 105, 110, 32, 79, 99, 116, 111, 98, 101, 114, 44, 32, 97, 110, 100, 32, 116, 104, 101, 32, 67, 67, 32, 73, 110, 100, 105, 97, 32, 67, 104, 97, 112, 116, 101, 114, 32, 105, 110, 32, 78, 111, 118, 101, 109, 98, 101, 114, 44, 32, 116, 104, 101, 32, 67, 67, 32, 77, 101, 120, 105, 99, 111, 32, 67, 104, 97, 112, 116, 101, 114, 32, 105, 110, 32, 68, 101, 99, 101, 109, 98, 101, 114, 44, 32, 97, 110, 100, 32, 67, 67, 32, 65, 114, 103, 101, 110, 116, 105, 110, 97, 32, 67, 104, 97, 112, 116, 101, 114, 32, 105, 110, 32, 74, 97, 110, 117, 97, 114, 121, 44, 32, 119, 101, 32, 97, 114, 101, 32, 110, 111, 119, 32, 116, 114, 97, 118, 101, 108, 105, 110, 103, 32, 116, 111, 32, 65, 102, 114, 105, 99, 97]]
              result_format_codes: [1]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", D, C, Z]
          identifier: ServerResponse
          length: 111
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 73
                - 78
                - 83
                - 69
                - 82
                - 84
                - 32
                - 48
                - 32
                - 49
          data_row: [{values: [[0, 0, 0, 2]]}, {values: [[0, 0, 0, 2]]}, {values: [[0, 0, 0, 2]]}]
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 111
          describe:
            object_type: 83
            name: ""
          parse:
            - name: ""
              query: INSERT INTO post_logs(post_id, operation) VALUES ($1, $2)
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, "n", Z]
          identifier: ServerResponse
          length: 111
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 23
                - 1043
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 111
          bind:
            - parameters: [[50], [105, 110, 115, 101, 114, 116]]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 111
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 73
                - 78
                - 83
                - 69
                - 82
                - 84
                - 32
                - 48
                - 32
                - 49
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
---
version: api.keploy.io/v1beta2
kind: Http
name: mocks
spec:
    metadata:
        name: Http
        operation: GET
        type: HTTP_CLIENT
    req:
        method: GET
        proto_major: 1
        proto_minor: 1
        url: /
        header:
            Accept-Encoding: gzip
            User-Agent: go-elasticsearch/7.17.10 (linux arm64; Go 1.20.10)
            X-Elastic-Client-Meta: es=7.17.10,go=1.20.10,t=7.17.10,hc=1.20.10
        body: ""
        body_type: ""
    resp:
        status_code: 200
        header:
            Content-Encoding: gzip
            Content-Length: 330,540
            Content-Type: application/json
            X-Elastic-Product: Elasticsearch
        body: |
            {
              "name" : "240f9111b52c",
              "cluster_name" : "docker-cluster",
              "cluster_uuid" : "v5Nk20B0RLabE6GK7grsYQ",
              "version" : {
                "number" : "8.10.4",
                "build_flavor" : "default",
                "build_type" : "docker",
                "build_hash" : "b4a62ac808e886ff032700c391f45f1408b2538c",
                "build_date" : "2023-10-11T22:04:35.506990650Z",
                "build_snapshot" : false,
                "lucene_version" : "9.7.0",
                "minimum_wire_compatibility_version" : "7.17.0",
                "minimum_index_compatibility_version" : "7.0.0"
              },
              "tagline" : "You Know, for Search"
            }
        body_type: ""
        status_message: ""
        proto_major: 0
        proto_minor: 0
    objects: []
    created: 1698668188
---
version: api.keploy.io/v1beta2
kind: Http
name: mocks
spec:
    metadata:
        name: Http
        operation: POST
        type: HTTP_CLIENT
    req:
        method: POST
        proto_major: 1
        proto_minor: 1
        url: /posts/_search?pretty=true
        url_params:
            pretty: "true"
        header:
            Accept-Encoding: gzip
            Content-Length: "77"
            Content-Type: application/json
            User-Agent: go-elasticsearch/7.17.10 (linux arm64; Go 1.20.10)
            X-Elastic-Client-Meta: es=7.17.10,go=1.20.10,t=7.17.10,hc=1.20.10
        body: '{"query": {"multi_match": {"query": "Sarthak", "fields": ["title", "body"]}}}'
        body_type: ""
    resp:
        status_code: 404
        header:
            Content-Encoding: gzip
            Content-Length: 202,508
            Content-Type: application/json
            X-Elastic-Product: Elasticsearch
        body: |
            {
              "error" : {
                "root_cause" : [
                  {
                    "type" : "index_not_found_exception",
                    "reason" : "no such index [posts]",
                    "resource.type" : "index_or_alias",
                    "resource.id" : "posts",
                    "index_uuid" : "_na_",
                    "index" : "posts"
                  }
                ],
                "type" : "index_not_found_exception",
                "reason" : "no such index [posts]",
                "resource.type" : "index_or_alias",
                "resource.id" : "posts",
                "index_uuid" : "_na_",
                "index" : "posts"
              },
              "status" : 404
            }
        body_type: ""
        status_message: ""
        proto_major: 0
        proto_minor: 0
    objects: []
    created: 1698668188
---
version: api.keploy.io/v1beta2
kind: Http
name: mocks
spec:
    metadata:
        name: Http
        operation: POST
        type: HTTP_CLIENT
    req:
        method: POST
        proto_major: 1
        proto_minor: 1
        url: /posts/_search?pretty=true
        url_params:
            pretty: "true"
        header:
            Accept-Encoding: gzip
            Content-Length: "72"
            Content-Type: application/json
            User-Agent: go-elasticsearch/7.17.10 (linux arm64; Go 1.20.10)
            X-Elastic-Client-Meta: es=7.17.10,go=1.20.10,t=7.17.10,hc=1.20.10
        body: '{"query": {"multi_match": {"query": "CC", "fields": ["title", "body"]}}}'
        body_type: ""
    resp:
        status_code: 404
        header:
            Content-Encoding: gzip
            Content-Length: 202,508
            Content-Type: application/json
            X-Elastic-Product: Elasticsearch
        body: |
            {
              "error" : {
                "root_cause" : [
                  {
                    "type" : "index_not_found_exception",
                    "reason" : "no such index [posts]",
                    "resource.type" : "index_or_alias",
                    "resource.id" : "posts",
                    "index_uuid" : "_na_",
                    "index" : "posts"
                  }
                ],
                "type" : "index_not_found_exception",
                "reason" : "no such index [posts]",
                "resource.type" : "index_or_alias",
                "resource.id" : "posts",
                "index_uuid" : "_na_",
                "index" : "posts"
              },
              "status" : 404
            }
        body_type: ""
        status_message: ""
        proto_major: 0
        proto_minor: 0
    objects: []
    created: 1698668256
---
version: api.keploy.io/v1beta2
kind: Http
name: mocks
spec:
    metadata:
        name: Http
        operation: POST
        type: HTTP_CLIENT
    req:
        method: POST
        proto_major: 1
        proto_minor: 1
        url: /posts/_search?pretty=true
        url_params:
            pretty: "true"
        header:
            Accept-Encoding: gzip
            Content-Length: "71"
            Content-Type: application/json
            User-Agent: go-elasticsearch/7.17.10 (linux arm64; Go 1.20.10)
            X-Elastic-Client-Meta: es=7.17.10,go=1.20.10,t=7.17.10,hc=1.20.10
        body: '{"query": {"multi_match": {"query": "2", "fields": ["title", "body"]}}}'
        body_type: ""
    resp:
        status_code: 404
        header:
            Content-Encoding: gzip
            Content-Length: 202,508
            Content-Type: application/json
            X-Elastic-Product: Elasticsearch
        body: |
            {
              "error" : {
                "root_cause" : [
                  {
                    "type" : "index_not_found_exception",
                    "reason" : "no such index [posts]",
                    "resource.type" : "index_or_alias",
                    "resource.id" : "posts",
                    "index_uuid" : "_na_",
                    "index" : "posts"
                  }
                ],
                "type" : "index_not_found_exception",
                "reason" : "no such index [posts]",
                "resource.type" : "index_or_alias",
                "resource.id" : "posts",
                "index_uuid" : "_na_",
                "index" : "posts"
              },
              "status" : 404
            }
        body_type: ""
        status_message: ""
        proto_major: 0
        proto_minor: 0
    objects: []
    created: 1698668263
---
version: api.keploy.io/v1beta2
kind: Http
name: mocks
spec:
    metadata:
        name: Http
        operation: POST
        type: HTTP_CLIENT
    req:
        method: POST
        proto_major: 1
        proto_minor: 1
        url: /posts/_search?pretty=true
        url_params:
            pretty: "true"
        header:
            Accept-Encoding: gzip
            Content-Length: "77"
            Content-Type: application/json
            User-Agent: go-elasticsearch/7.17.10 (linux arm64; Go 1.20.10)
            X-Elastic-Client-Meta: es=7.17.10,go=1.20.10,t=7.17.10,hc=1.20.10
        body: '{"query": {"multi_match": {"query": "sarthak", "fields": ["title", "body"]}}}'
        body_type: ""
    resp:
        status_code: 404
        header:
            Content-Encoding: gzip
            Content-Length: 202,508
            Content-Type: application/json
            X-Elastic-Product: Elasticsearch
        body: |
            {
              "error" : {
                "root_cause" : [
                  {
                    "type" : "index_not_found_exception",
                    "reason" : "no such index [posts]",
                    "resource.type" : "index_or_alias",
                    "resource.id" : "posts",
                    "index_uuid" : "_na_",
                    "index" : "posts"
                  }
                ],
                "type" : "index_not_found_exception",
                "reason" : "no such index [posts]",
                "resource.type" : "index_or_alias",
                "resource.id" : "posts",
                "index_uuid" : "_na_",
                "index" : "posts"
              },
              "status" : 404
            }
        body_type: ""
        status_message: ""
        proto_major: 0
        proto_minor: 0
    objects: []
    created: 1698668287
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [Q]
          identifier: ClientRequest
          length: 111
          query:
            string: SELECT id, title, body FROM posts ORDER BY id DESC
          msg_type: 81
          auth_type: 0
    postgresresponses:
        - header: [T, D, D, C, Z]
          identifier: ServerResponse
          length: 111
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 50
          data_row: [{values: [[50], [77, 101, 101, 116, 32, 83, 97, 114, 116, 104, 97, 107, 44, 32, 79, 117, 114, 32, 78, 101, 120, 116, 32, 70, 101, 97, 116, 117, 114, 101, 32, 102, 111, 114, 32, 67, 67, 32, 78, 101, 116, 119, 111, 114, 107], [65, 102, 116, 101, 114, 32, 105, 110, 116, 114, 111, 100, 117, 99, 105, 110, 103, 32, 116, 104, 101, 32, 67, 67, 32, 73, 116, 97, 108, 121, 32, 67, 104, 97, 112, 116, 101, 114, 32, 116, 111, 32, 121, 111, 117, 32, 105, 110, 32, 74, 117, 108, 121, 44, 32, 116, 104, 101, 32, 67, 67, 32, 78, 101, 116, 104, 101, 114, 108, 97, 110, 100, 115, 32, 67, 104, 97, 112, 116, 101, 114, 32, 105, 110, 32, 65, 117, 103, 117, 115, 116, 44, 32, 67, 67, 32, 66, 97, 110, 103, 108, 97, 100, 101, 115, 104, 32, 67, 104, 97, 112, 116, 101, 114, 32, 105, 110, 32, 83, 101, 112, 116, 101, 109, 98, 101, 114, 44, 32, 67, 67, 32, 84, 97, 110, 122, 97, 110, 105, 97, 32, 67, 104, 97, 112, 116, 101, 114, 32, 105, 110, 32, 79, 99, 116, 111, 98, 101, 114, 44, 32, 97, 110, 100, 32, 116, 104, 101, 32, 67, 67, 32, 73, 110, 100, 105, 97, 32, 67, 104, 97, 112, 116, 101, 114, 32, 105, 110, 32, 78, 111, 118, 101, 109, 98, 101, 114, 44, 32, 116, 104, 101, 32, 67, 67, 32, 77, 101, 120, 105, 99, 111, 32, 67, 104, 97, 112, 116, 101, 114, 32, 105, 110, 32, 68, 101, 99, 101, 109, 98, 101, 114, 44, 32, 97, 110, 100, 32, 67, 67, 32, 65, 114, 103, 101, 110, 116, 105, 110, 97, 32, 67, 104, 97, 112, 116, 101, 114, 32, 105, 110, 32, 74, 97, 110, 117, 97, 114, 121, 44, 32, 119, 101, 32, 97, 114, 101, 32, 110, 111, 119, 32, 116, 114, 97, 118, 101, 108, 105, 110, 103, 32, 116, 111, 32, 65, 102, 114, 105, 99, 97]]}, {values: [[49], [77, 101, 101, 116, 32, 83, 97, 114, 116, 104, 97, 107, 44, 32, 79, 117, 114, 32, 78, 101, 120, 116, 32, 70, 101, 97, 116, 117, 114, 101, 32, 102, 111, 114, 32, 67, 67, 32, 78, 101, 116, 119, 111, 114, 107], [65, 102, 116, 101, 114, 32, 105, 110, 116, 114, 111, 100, 117, 99, 105, 110, 103, 32, 116, 104, 101, 32, 67, 67, 32, 73, 116, 97, 108, 121, 32, 67, 104, 97, 112, 116, 101, 114, 32, 116, 111, 32, 121, 111, 117, 32, 105, 110, 32, 74, 117, 108, 121, 44, 32, 116, 104, 101, 32, 67, 67, 32, 78, 101, 116, 104, 101, 114, 108, 97, 110, 100, 115, 32, 67, 104, 97, 112, 116, 101, 114, 32, 105, 110, 32, 65, 117, 103, 117, 115, 116, 44, 32, 67, 67, 32, 66, 97, 110, 103, 108, 97, 100, 101, 115, 104, 32, 67, 104, 97, 112, 116, 101, 114, 32, 105, 110, 32, 83, 101, 112, 116, 101, 109, 98, 101, 114, 44, 32, 67, 67, 32, 84, 97, 110, 122, 97, 110, 105, 97, 32, 67, 104, 97, 112, 116, 101, 114, 32, 105, 110, 32, 79, 99, 116, 111, 98, 101, 114, 44, 32, 97, 110, 100, 32, 116, 104, 101, 32, 67, 67, 32, 73, 110, 100, 105, 97, 32, 67, 104, 97, 112, 116, 101, 114, 32, 105, 110, 32, 78, 111, 118, 101, 109, 98, 101, 114, 44, 32, 116, 104, 101, 32, 67, 67, 32, 77, 101, 120, 105, 99, 111, 32, 67, 104, 97, 112, 116, 101, 114, 32, 105, 110, 32, 68, 101, 99, 101, 109, 98, 101, 114, 44, 32, 97, 110, 100, 32, 67, 67, 32, 65, 114, 103, 101, 110, 116, 105, 110, 97, 32, 67, 104, 97, 112, 116, 101, 114, 32, 105, 110, 32, 74, 97, 110, 117, 97, 114, 121, 44, 32, 119, 101, 32, 97, 114, 101, 32, 110, 111, 119, 32, 116, 114, 97, 118, 101, 108, 105, 110, 103, 32, 116, 111, 32, 65, 102, 114, 105, 99, 97]]}, {values: [[49], [77, 101, 101, 116, 32, 83, 97, 114, 116, 104, 97, 107, 44, 32, 79, 117, 114, 32, 78, 101, 120, 116, 32, 70, 101, 97, 116, 117, 114, 101, 32, 102, 111, 114, 32, 67, 67, 32, 78, 101, 116, 119, 111, 114, 107], [65, 102, 116, 101, 114, 32, 105, 110, 116, 114, 111, 100, 117, 99, 105, 110, 103, 32, 116, 104, 101, 32, 67, 67, 32, 73, 116, 97, 108, 121, 32, 67, 104, 97, 112, 116, 101, 114, 32, 116, 111, 32, 121, 111, 117, 32, 105, 110, 32, 74, 117, 108, 121, 44, 32, 116, 104, 101, 32, 67, 67, 32, 78, 101, 116, 104, 101, 114, 108, 97, 110, 100, 115, 32, 67, 104, 97, 112, 116, 101, 114, 32, 105, 110, 32, 65, 117, 103, 117, 115, 116, 44, 32, 67, 67, 32, 66, 97, 110, 103, 108, 97, 100, 101, 115, 104, 32, 67, 104, 97, 112, 116, 101, 114, 32, 105, 110, 32, 83, 101, 112, 116, 101, 109, 98, 101, 114, 44, 32, 67, 67, 32, 84, 97, 110, 122, 97, 110, 105, 97, 32, 67, 104, 97, 112, 116, 101, 114, 32, 105, 110, 32, 79, 99, 116, 111, 98, 101, 114, 44, 32, 97, 110, 100, 32, 116, 104, 101, 32, 67, 67, 32, 73, 110, 100, 105, 97, 32, 67, 104, 97, 112, 116, 101, 114, 32, 105, 110, 32, 78, 111, 118, 101, 109, 98, 101, 114, 44, 32, 116, 104, 101, 32, 67, 67, 32, 77, 101, 120, 105, 99, 111, 32, 67, 104, 97, 112, 116, 101, 114, 32, 105, 110, 32, 68, 101, 99, 101, 109, 98, 101, 114, 44, 32, 97, 110, 100, 32, 67, 67, 32, 65, 114, 103, 101, 110, 116, 105, 110, 97, 32, 67, 104, 97, 112, 116, 101, 114, 32, 105, 110, 32, 74, 97, 110, 117, 97, 114, 121, 44, 32, 119, 101, 32, 97, 114, 101, 32, 110, 111, 119, 32, 116, 114, 97, 118, 101, 108, 105, 110, 103, 32, 116, 111, 32, 65, 102, 114, 105, 99, 97]]}, {values: [[49], [77, 101, 101, 116, 32, 83, 97, 114, 116, 104, 97, 107, 44, 32, 79, 117, 114, 32, 78, 101, 120, 116, 32, 70, 101, 97, 116, 117, 114, 101, 32, 102, 111, 114, 32, 67, 67, 32, 78, 101, 116, 119, 111, 114, 107], [65, 102, 116, 101, 114, 32, 105, 110, 116, 114, 111, 100, 117, 99, 105, 110, 103, 32, 116, 104, 101, 32, 67, 67, 32, 73, 116, 97, 108, 121, 32, 67, 104, 97, 112, 116, 101, 114, 32, 116, 111, 32, 121, 111, 117, 32, 105, 110, 32, 74, 117, 108, 121, 44, 32, 116, 104, 101, 32, 67, 67, 32, 78, 101, 116, 104, 101, 114, 108, 97, 110, 100, 115, 32, 67, 104, 97, 112, 116, 101, 114, 32, 105, 110, 32, 65, 117, 103, 117, 115, 116, 44, 32, 67, 67, 32, 66, 97, 110, 103, 108, 97, 100, 101, 115, 104, 32, 67, 104, 97, 112, 116, 101, 114, 32, 105, 110, 32, 83, 101, 112, 116, 101, 109, 98, 101, 114, 44, 32, 67, 67, 32, 84, 97, 110, 122, 97, 110, 105, 97, 32, 67, 104, 97, 112, 116, 101, 114, 32, 105, 110, 32, 79, 99, 116, 111, 98, 101, 114, 44, 32, 97, 110, 100, 32, 116, 104, 101, 32, 67, 67, 32, 73, 110, 100, 105, 97, 32, 67, 104, 97, 112, 116, 101, 114, 32, 105, 110, 32, 78, 111, 118, 101, 109, 98, 101, 114, 44, 32, 116, 104, 101, 32, 67, 67, 32, 77, 101, 120, 105, 99, 111, 32, 67, 104, 97, 112, 116, 101, 114, 32, 105, 110, 32, 68, 101, 99, 101, 109, 98, 101, 114, 44, 32, 97, 110, 100, 32, 67, 67, 32, 65, 114, 103, 101, 110, 116, 105, 110, 97, 32, 67, 104, 97, 112, 116, 101, 114, 32, 105, 110, 32, 74, 97, 110, 117, 97, 114, 121, 44, 32, 119, 101, 32, 97, 114, 101, 32, 110, 111, 119, 32, 116, 114, 97, 118, 101, 108, 105, 110, 103, 32, 116, 111, 32, 65, 102, 114, 105, 99, 97]]}]
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [105, 100], table_oid: 24585, table_attribute_number: 1, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [116, 105, 116, 108, 101], table_oid: 24585, table_attribute_number: 2, data_type_oid: 1043, data_type_size: -1, type_modifier: 154, format: 0}, {name: [98, 111, 100, 121], table_oid: 24585, table_attribute_number: 3, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 111
          describe:
            object_type: 83
            name: ""
          parse:
            - name: ""
              query: INSERT INTO posts(title, body) VALUES ($1, $2) RETURNING id
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, T, Z]
          identifier: ServerResponse
          length: 111
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 1043
                - 25
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [105, 100], table_oid: 24585, table_attribute_number: 1, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 111
          bind:
            - parameters: [[77, 101, 101, 116, 32, 82, 105, 116, 105, 107, 44, 32, 79, 117, 114, 32, 78, 101, 120, 116, 32, 70, 101, 97, 116, 117, 114, 101, 32, 102, 111, 114, 32, 67, 67, 32, 78, 101, 116, 119, 111, 114, 107], [65, 102, 116, 101, 114, 32, 105, 110, 116, 114, 111, 100, 117, 99, 105, 110, 103, 32, 116, 104, 101, 32, 67, 67, 32, 73, 116, 97, 108, 121, 32, 67, 104, 97, 112, 116, 101, 114, 32, 116, 111, 32, 121, 111, 117, 32, 105, 110, 32, 74, 117, 108, 121, 44, 32, 116, 104, 101, 32, 67, 67, 32, 78, 101, 116, 104, 101, 114, 108, 97, 110, 100, 115, 32, 67, 104, 97, 112, 116, 101, 114, 32, 105, 110, 32, 65, 117, 103, 117, 115, 116, 44, 32, 67, 67, 32, 66, 97, 110, 103, 108, 97, 100, 101, 115, 104, 32, 67, 104, 97, 112, 116, 101, 114, 32, 105, 110, 32, 83, 101, 112, 116, 101, 109, 98, 101, 114, 44, 32, 67, 67, 32, 84, 97, 110, 122, 97, 110, 105, 97, 32, 67, 104, 97, 112, 116, 101, 114, 32, 105, 110, 32, 79, 99, 116, 111, 98, 101, 114, 44, 32, 97, 110, 100, 32, 116, 104, 101, 32, 67, 67, 32, 73, 110, 100, 105, 97, 32, 67, 104, 97, 112, 116, 101, 114, 32, 105, 110, 32, 78, 111, 118, 101, 109, 98, 101, 114, 44, 32, 116, 104, 101, 32, 67, 67, 32, 77, 101, 120, 105, 99, 111, 32, 67, 104, 97, 112, 116, 101, 114, 32, 105, 110, 32, 68, 101, 99, 101, 109, 98, 101, 114, 44, 32, 97, 110, 100, 32, 67, 67, 32, 65, 114, 103, 101, 110, 116, 105, 110, 97, 32, 67, 104, 97, 112, 116, 101, 114, 32, 105, 110, 32, 74, 97, 110, 117, 97, 114, 121, 44, 32, 119, 101, 32, 97, 114, 101, 32, 110, 111, 119, 32, 116, 114, 97, 118, 101, 108, 105, 110, 103, 32, 116, 111, 32, 65, 102, 114, 105, 99, 97]]
              result_format_codes: [1]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", D, C, Z]
          identifier: ServerResponse
          length: 111
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 73
                - 78
                - 83
                - 69
                - 82
                - 84
                - 32
                - 48
                - 32
                - 49
          data_row: [{values: [[0, 0, 0, 3]]}, {values: [[0, 0, 0, 3]]}, {values: [[0, 0, 0, 3]]}]
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 111
          describe:
            object_type: 83
            name: ""
          parse:
            - name: ""
              query: INSERT INTO post_logs(post_id, operation) VALUES ($1, $2)
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, "n", Z]
          identifier: ServerResponse
          length: 111
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 23
                - 1043
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 111
          bind:
            - parameters: [[51], [105, 110, 115, 101, 114, 116]]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 111
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 73
                - 78
                - 83
                - 69
                - 82
                - 84
                - 32
                - 48
                - 32
                - 49
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
